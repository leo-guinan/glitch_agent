name: Deploy to GCP

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GCP_PROJECT_ID: leoai-nexus-data-lake
  GCP_ZONE: us-central1-a
  GCP_INSTANCE_NAME: mastra-app
  GCP_REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}
          token_format: access_token

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup SSH Keys
        run: |
          mkdir -p ~/.ssh
          echo 'y' | gcloud compute config-ssh --project=${{ env.GCP_PROJECT_ID }} --quiet
          gcloud compute ssh ${{ env.GCP_INSTANCE_NAME }} \
            --project=${{ env.GCP_PROJECT_ID }} \
            --zone=${{ env.GCP_ZONE }} \
            --command="echo 'Testing SSH connection'" \
            --troubleshoot || true

      - name: Docker Auth
        run: |
          echo ${{ steps.auth.outputs.access_token }} | docker login -u oauth2accesstoken --password-stdin ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/mastra-app/app:${{ github.sha }} .
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/mastra-app/app:${{ github.sha }}

      - name: Install Docker on GCP Instance
        run: |
          for i in {1..3}; do
            gcloud compute ssh ${{ env.GCP_INSTANCE_NAME }} \
              --project=${{ env.GCP_PROJECT_ID }} \
              --zone=${{ env.GCP_ZONE }} \
              --command="sudo apt-get update && \
                        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common net-tools psmisc && \
                        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && \
                        sudo add-apt-repository 'deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable' && \
                        sudo apt-get update && \
                        sudo apt-get install -y docker-ce docker-ce-cli containerd.io && \
                        sudo usermod -aG docker $USER" && break || \
            if [ $i -eq 3 ]; then
              echo "Failed after 3 retries" && exit 1
            fi
            echo "Attempt $i failed. Waiting 10 seconds..." && sleep 10
          done

      - name: Configure Docker on GCP Instance
        run: |
          for i in {1..3}; do
            gcloud compute ssh ${{ env.GCP_INSTANCE_NAME }} \
              --project=${{ env.GCP_PROJECT_ID }} \
              --zone=${{ env.GCP_ZONE }} \
              --command="echo ${{ steps.auth.outputs.access_token }} | sudo docker login -u oauth2accesstoken --password-stdin ${{ env.GCP_REGION }}-docker.pkg.dev" && break || \
            if [ $i -eq 3 ]; then
              echo "Failed after 3 retries" && exit 1
            fi
            echo "Attempt $i failed. Waiting 10 seconds..." && sleep 10
          done

      - name: Cleanup Port and Deploy to GCP
        run: |
          for i in {1..3}; do
            gcloud compute ssh ${{ env.GCP_INSTANCE_NAME }} \
              --project=${{ env.GCP_PROJECT_ID }} \
              --zone=${{ env.GCP_ZONE }} \
              --command="sudo pkill -f 'node.*4111' || true && \
                        sudo docker ps -aq | xargs -r sudo docker rm -f && \
                        sudo docker system prune -af && \
                        sleep 5 && \
                        if sudo netstat -tlpn | grep ':4111'; then \
                          echo 'Port 4111 still in use after cleanup' && \
                          sudo netstat -tlpn | grep ':4111' && \
                          sudo ps aux | grep node && \
                          exit 1; \
                        fi && \
                        sudo docker pull ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/mastra-app/app:${{ github.sha }} && \
                        sudo docker run -d \
                          --name mastra-app \
                          --restart unless-stopped \
                          -p 4111:4111 \
                          -e API_KEYS='${{ secrets.API_KEYS }}' \
                          -e OPENAI_API_KEY='${{ secrets.OPENAI_API_KEY }}' \
                          -e GCP_PROJECT_ID='${{ env.GCP_PROJECT_ID }}' \
                          -e GCP_ZONE='${{ env.GCP_ZONE }}' \
                          -e GCP_INSTANCE_NAME='${{ env.GCP_INSTANCE_NAME }}' \
                          ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/mastra-app/app:${{ github.sha }}" && break || \
            if [ $i -eq 3 ]; then
              echo "Failed after 3 retries" && exit 1
            fi
            echo "Attempt $i failed. Waiting 10 seconds..." && sleep 10
          done 